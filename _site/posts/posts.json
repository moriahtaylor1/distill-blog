[
  {
    "path": "posts/2021-10-05-how-to-read-files-programmatically-in-r/",
    "title": "How to Read Files Programmatically in R",
    "description": "Learn how to read files using the assign() function.",
    "author": [
      {
        "name": "Moriah Taylor",
        "url": "https://twitter.com/moriah_taylor58"
      }
    ],
    "date": "2021-10-05",
    "categories": [],
    "contents": "\r\nIntroduction\r\nI’ve recently been working on a project at work for which I have to combine multiple datasets from multiple years. The process of reading 80 files in line-by-line would be incredibly impractical. While looking for a solution, I found out about the assign() function, which allows you to assign a name to an object and save it to your environment. I found this so helpful that I wanted to share it with all of you.\r\nStep 1: Create names for your dataframes\r\nThe first thing you want to do is create a list of names that you’re going to use for your dataframes. It’s easiest to do this based on a sequence of numbers, whether you start at 1 or want to label your dataframes by year.\r\n\r\n\r\nnumbers <- seq(1,5,1) #creates list of numbers from 1 to 5\r\ndataframe_names <- c() #initialize empty list\r\n#create loop to generate names\r\nfor (i in 1:length(numbers)){\r\n  n <- numbers[i] #get number from numbers list\r\n  dataframe_names[i] <- paste0(\"df\", n) #add generated name to dataframe names list\r\n}\r\nprint(dataframe_names)\r\n\r\n\r\n[1] \"df1\" \"df2\" \"df3\" \"df4\" \"df5\"\r\n\r\nStep 2: List your file paths\r\nThe next step is to compile a list of paths to all the files you want to read in. This is easiest to do if all the files are named similarly, so it may be in your best interest to rename all files to match a certain pattern.\r\n\r\n\r\nfile_paths <- c() #initialize empty list\r\n#create loop to generate paths\r\nfor (i in 1:length(numbers)){\r\n  n <- numbers[i] #get number from numbers list\r\n  file_paths[i] <- paste0(\"file\", n, \".txt\") #add file path to list\r\n}\r\nprint(file_paths)\r\n\r\n\r\n[1] \"file1.txt\" \"file2.txt\" \"file3.txt\" \"file4.txt\" \"file5.txt\"\r\n\r\nStep 3: Load files\r\nNow for the last step - loading in your files. The key to doing this programmatically is the assign() function, which will allow you to assign your names to your files in order to store them as objects in your environment.\r\n\r\n\r\nfile_count <- 1 #keep track of file path index\r\n#loop through names\r\nfor (n in dataframe_names){\r\n  filepath <- file_paths[file_count]  #get file path at position equal to file_count\r\n  #read in comma-delimited text file and assign it to name \"n\"\r\n  assign(n, read.delim(filepath, header = TRUE, sep = \",\", dec = \".\")) \r\n  file_count <- file_count + 1  #increase file_count by one to go to next file\r\n}\r\n\r\n\r\n\r\nConclusion\r\nI hope this blog post served as a helpful tool for you to learn how to programmatically read files into R. For more R tips and tricks, you can follow me on Twitter and to watch me program live, you can follow me on Twitch.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-10-05T14:07:03-04:00",
    "input_file": "how-to-read-files-programmatically-in-r.knit.md"
  },
  {
    "path": "posts/2021-08-14-color-accessibility-5-tips-for-choosing-accessible-colors/",
    "title": "Color & Accessibility",
    "description": "5 Tips for Choosing Accessible Colors",
    "author": [
      {
        "name": "Moriah Taylor",
        "url": "https://twitter.com/moriah_taylor58"
      }
    ],
    "date": "2021-08-16",
    "categories": [],
    "contents": "\r\nIntroduction\r\nWhen choosing colors for a color visualization, it is important to be mindful of those with color vision deficiencies. Color vision deficiency is the inability to distinguish certain shades of color; the term “color blindness” is also used to describe this condition, but very few people are completely colorblind (American Optometric Association).\r\nColor deficiency is the result of malfunctioning or missing cones in the eyes - cones being the part of the eye that perceives color. Without getting too technical, our eyes have three cones - red, green, and blue. The most common type of deficiencies make it hard to differentiate between red and green.\r\nThere are four main types of red-green color deficiencies, listed below with their corresponding prevalence sourced from We are Colorblind:\r\n● Deuteranomaly (4.63%) - malfunctioning green cone\r\n● Deuteranopia (1.27%) - missing green cone\r\n● Protanomaly (1.08%) - malfunctioning red cone\r\n● Protanopia (1.01%) - missing red cone\r\nThere are also two types of blue color deficiency, but they are very rare:\r\n● Tritanopia (0.03%) - missing blue cone\r\n● Tritanomaly (0.02%) - malfunctioning blue cone\r\nThere are many tools that you can use to simulate these color deficiencies on your color palettes. My personal favorite is Viz Palette by Elijah Meeks & Susie Lu. But there are others out there such as COBLIS and Color Oracle.\r\nBesides checking your palette under a simulator (which you should always do), here are some other ways that you can improve the accessibility of your color palettes:\r\n1. Have Lightness Contrast\r\nHaving lightness contrast is one of the best ways to improve the perception of a color palette.\r\n\r\n2. If using green, make it a bit yellow or a bit blue\r\nBy adjusting the hue of a green color, you can make it more perceivable to those who have color deficiencies.\r\n\r\n3. Avoid using too many shades of purple and blue together\r\nPurple is my favorite color so I often want to use it in my visualizations and what I’ve learned from using colorblindness simulators is that it is often perceived as a shade of blue, so just use caution when using these two colors together. Again, lightness contrast is a way to resolve this issue.\r\n\r\n4. Don’t use red and green together\r\nThis may seem like an obvious tip for anyone remotely familiar with color deficiencies, but it can be a natural instinct to use these colors in a divergent palette to represent positive or negative values. Instead, try to use orange and blue and/or denote the increases with +/- symbols.\r\n\r\n5. Use border or white space between colored areas\r\nBy utilizing borders or white space, you can preserve contrast between colors/areas of your visualization.\r\n\r\nConclusion\r\nChecking that your visualization is perceivable by those with color deficiencies is only ONE WAY to increase accessibility. There are a lot of other ways in which individuals may have trouble accessing your design. I will delve more into this in another blog post that covers accessibility more generally.\r\nResources\r\n● “119 | Color with Karen Schloss” Data Stories Podcast https://datastori.es/119-color-with-karen-schloss/\r\n● “Color Theory - DVS Fireside Chat #1” Data Visualization Society YouTube channel: https://www.youtube.com/watch?v=ihy3ENb89EU&ab_channel=DataVisualizationSociety\r\n● “How to pick more beautiful colors for your data visualizations” Lisa Charlotte Rost - Datawrapper https://blog.datawrapper.de/beautifulcolors/\r\n● “How to use color in your data visualization” storytelling with data YouTube channel: https://www.youtube.com/watch?v=AiD6etOB6qI&ab_channel=storytellingwithdata\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-08-16T09:42:04-04:00",
    "input_file": "color-accessibility.utf8.md"
  },
  {
    "path": "posts/2021-07-28-introduction-to-color-and-color-harmony/",
    "title": "Introduction to Color",
    "description": "A brief introduction to color and color harmony.",
    "author": [
      {
        "name": "Moriah Taylor",
        "url": "https://twitter.com/moriah_taylor58"
      }
    ],
    "date": "2021-08-09",
    "categories": [],
    "contents": "\r\nRecently, I’ve been doing a lot of research about color. Color is an important element of all visualizations and it is a powerful communication tool. For this reason, I try to utilize color in my data visualizations in order to improve the clarity of my message and the quality of my data stories.\r\nThe topic of color is VAST, and there are many different resources on the topic. There are podcasts, books, YouTube videos, blog posts, Twitter threads, and the list goes on. What initially sparked my interest in color was a Data Stories podcast with Karen Schloss, who conducts research on the effective uses of color in visualization and everyday tasks at her lab at the University of Wisconsin-Madison. I encourage you to go give it a listen if you haven’t yet already.\r\nBecause this is such a huge topic, I’m going to break it down into a series of different posts. To start, let’s define some key terms relating to color and then do a brief introduction into color theory and color harmonies.\r\nKey Terminology\r\n(all images in this section courtesy of https://www.qed42.com/blog/from-hue-to-color-story-a-basic-understanding-of-colors)\r\nHue\r\nHue is what we typically think of as color - “red”, “blue-green”, “purple”, etc.\r\ncolor wheel with hue namesSaturation\r\nSaturation is interchangeable with intensity - this references to how subtle or vibrant a color is.\r\ndiagram showing the color red-orange in range from 0% to 100% saturationValue\r\nValue is how light (white) or dark (black) a color is. Darker versions of a hue are called shades and lighter versions of a hue are called tints.\r\ndiagram showing the color red in range from 100% value to 0% valueColor Theory and Color Harmonies\r\n(all color wheel images in this section courtesy of https://blog.thepapermillstore.com/color-theory-color-harmonies/)\r\nThe definition for color theory on Wikipedia describes it as: a body of practical guidance to color mixing and the visual effects of a specific color combination. What we’ll be focusing on is the different types of color combinations. These color schemes are referred to as color harmonies. We can utilize certain color harmonies to create visualizations that are pleasing to the eye. There are 6 main types of color harmonies:\r\nMonochromatic\r\n One of the easiest color schemes to create. All you have to do is pick a hue, then change saturation and value to make different color variations. The best part of this color scheme is that it’s guaranteed to match! Monochromatic color schemes are best used for continuous color scales in visualizations such as heat maps and choropleth maps.\r\nAnalagous\r\n This is also another easy color scheme to create. An analogous color palette contains hues that are right next to each other on the color wheel. Analogous colors can also be used in heat maps and choropleth maps, but also can be used with categorical data.\r\nComplementary\r\n A complementary color scheme uses colors that are across from each other on the color wheel. To avoid a basic color scheme, use a variation of lighter, darker, or desaturated tones to build a palette.\r\nSplit-Complementary\r\n To create a split-complementary color scheme, first choose one color, find its complement, and then choose colors that are on either side of that complement. Like the complementary color scheme, you can also introduce variations of lightness, darkness, and saturation to create a more complex palette.\r\nTriadic\r\n A triadic color scheme uses 3 colors that are evenly spaced on the color wheel. Keep in mind that these combinations tend to be pretty striking, especially if you’re using all primary or all secondary colors.\r\nTetradic\r\n Tetradic color schemes form either a square or a rectangle on the color wheel. This can result in a lot of hues, so it is not the most-recommended way to build a color palette for a data visual. This type of color scheme is best used when one color is dominating and the rest are used as accents.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-08-09T11:54:27-04:00",
    "input_file": {}
  },
  {
    "path": "posts/welcome/",
    "title": "Welcome to Moriah's Thinking Chair",
    "description": "Welcome to my new blog, Moriah's Thinking Chair. I hope you enjoy this new form of content from me.",
    "author": [
      {
        "name": "Moriah Taylor",
        "url": "https://twitter.com/moriah_taylor58"
      }
    ],
    "date": "2021-07-28",
    "categories": [],
    "contents": "\r\nHi all! My name is Moriah Taylor and I am an analyst by trade and a data lover at heart. I am a content creator on Twitter and Twitch. Most of my content focuses on:\r\n    ● Data Wrangling\r\n    ● Data Visualization\r\n    ● Data Analysis\r\n    ● Best practices for all of the above\r\nThe goal of this blog is to complement the content that I already produce, as well as provide a space for longer-form content on topics that can’t be covered in a series of tweets. I am very excited about this project and hope you all enjoy it!\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-07-28T14:34:42-04:00",
    "input_file": {}
  }
]
