seg_quarter <- seg_row$year_quarter
call_sub <- call_report_sub %>% filter(JOIN_NUMBER==seg_join)
call_sub_row <- call_sub %>% filter(quarter==seg_quarter)
call_assets <- call_sub_row$ACCT_010
call_actual_members <- call_sub_row$ACCT_083
call_total_potential <- call_sub_row$ACCT_084
if (length(call_assets)==0){next}
else{
seg_clean3[i,13] <- call_assets
seg_clean3[i,14] <- call_actual_members
seg_clean3[i,15] <- call_total_potential}
}
#remove row that refers to a census tract addition
seg_clean3 <- seg_clean3 %>% filter(seg_name != "247 Tract Underserved Area")
#add fonts
font_add(family="bold", "fonts/SignikaNegative-SemiBold.ttf")
font_add(family="regular", "fonts/Roboto-Regular.ttf")
showtext_auto()
#bar graph theme
bar_graph_theme <- my_theme <- theme(
#titles
plot.title=element_text(family="bold", size=60, color="black", hjust=0),
#background
panel.border=element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
plot.margin=ggplot2::margin(0.5, 0.5, 0.5, 0.5, "in"),
#axes
axis.ticks.length=unit(0.15, "cm"),
axis.ticks = element_blank(),
axis.line = element_blank(),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.text.x = element_text(size=50, family="bold", colour="black"),
#no legend
legend.position = "none")
#count types of fom rules
fom_rule_type_counts <- seg_clean3 %>% count(fom_rule_type)
#graph bar chart
(seg_fom_rule_type_bar <- fom_rule_type_counts %>% ggplot(aes(x=fom_rule_type, y=n))  +
geom_bar(stat="identity", fill="#153967") +
geom_text(aes(label=n, family="regular"), size=14, vjust=-0.8, color="black") +
scale_y_continuous(limits=c(0,8000))+
scale_x_discrete(labels=c("Association", "Employer", "School", "Other")) +
labs(title="SEGs are mostly employer-based (2020)") +
bar_graph_theme)
#save bar chart
ggsave("visuals/seg_fom_type_bar2020.png",
plot=seg_fom_rule_type_bar,
device = agg_png(width = 7, height = 5, units = "in", res = 300))
percentiles <- c("25%", "50%", "75%", "90%", "95%", "99%", "Max")
values <- c(1, 5, 25, 140, 403, 3600, 6639325)
perc_table <- cbind(percentiles, values)
names(perc_table) <- c("Percentile", "Value")
#line graph theme
line_graph_theme <- my_theme <- theme(
#titles
plot.title=element_text(family="bold", size=55, color="black", hjust=0.5),
#background
panel.border=element_blank(),
panel.grid.major.y = element_line(color="#cccccc", size=1),
panel.grid.minor.y = element_line(color="#e0e0e0", size=0.5),
panel.grid.major.x = element_line(color="#e0e0e0", size=0.5),
panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
#axes
axis.ticks.length=unit(0.15, "cm"),
axis.ticks = element_blank(),
axis.line = element_blank(),
axis.title = element_text(size=40, family="regular", color="black"),
axis.text.y = element_text(size=35, family="regular", color="black"),
axis.text.x = element_text(size=50, family="bold", color="black"),
#no legend
legend.position = "none")
months_labels <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
#count observations per month
month_counts <- seg_clean3 %>% count(month) %>% arrange(month)
#graph line graph
seg_months_line <- month_counts %>% ggplot(aes(x=month, y=n)) + geom_line(size=1.2, color="#a01a5b") +
geom_point(shape=15, size=2, color="#a01a5b", fill="#a01a5b") +
scale_x_continuous(breaks=seq(1,12,1), labels=months_labels) +
ylab("") + xlab("") +
labs(title="No clear monthly seasonality in SEG additions in 2020") +
line_graph_theme
#save line graph
ggsave("visuals/seg_seasonality_months2020.png",
plot=seg_months_line,
device = agg_png(width = 8, height = 5, units = "in", res = 300))
seg_clean3$day <- as.numeric(format(seg_clean3$date, "%j"))
days_counts <- seg_clean3 %>% count(day) %>% arrange(day)
all_days <- seq(1, 366, 1)
n2 <- rep(0, 366)
filler <- as.data.frame(cbind(all_days, n2))
names(filler) <- c("day", "n2")
full_calendar <- merge(days_counts, filler, by="day", all=TRUE)
full_calendar$final_n <- full_calendar$n + full_calendar$n2
full_calendar$final_n[is.na(full_calendar$final_n)] <- 0
heat_map_colors <- c("#f8dcc8", "#f58c64", "#e73c3f", "#a01a5b")
heat_map_calendar <- calendR(year = 2020,
special.days = full_calendar$final_n,
gradient = TRUE,
special.col = heat_map_colors,
legend.pos = "top",
legend.title = "",
weeknames = c("M", "T", "W", "T", "F", "S", "S"),
days.col = "black",
col = "black",
lwd = 1,
title.size = 150,
day.size = 8,
font.style = "bold",
months.size = 35,
weeknames.size = 12)
#save calendar
ggsave("visuals/heat_calendar_2020.png",
plot=heat_map_calendar,
device = agg_png(width = 7, height = 8, units = "in", res = 300))
#get stats for each cu size
cu_stats <- seg_clean3 %>% group_by(join_no) %>%
summarise(name = last(cu_name), #name of credit union
avg_assets = round(mean(assets), 2), #average of assets value
asset_growth_num = last(assets) - first(assets),  #asset growth from last known number to first
asset_growth_pct = last(assets) / first(assets) - 1,  #asset growth percentage
num_groups_added = n(),   #number of segs
total_members_added = sum(potential_members, na.rm=TRUE),  #total potential members from segs
min_members_added = min(potential_members, na.rm=TRUE),  #min size of seg
avg_members_added = mean(potential_members, na.rm=TRUE),  #avg size of seg
max_members_added = max(potential_members, na.rm=TRUE))   #max size of seg
cu_stats <- cu_stats %>% mutate(cu_size = case_when(
avg_assets<10000000 ~ "small",
avg_assets>=10000000 & avg_assets<50000000 ~ "medium",
avg_assets>=50000000 & avg_assets<100000000 ~ "large",
avg_assets>=100000000 & avg_assets<500000000 ~ "xlarge",
avg_assets>=500000000 ~ "huge"
))
small_cu_stats <- cu_stats %>% filter(avg_assets>=1 & avg_assets<10000000)
med_cu_stats <- cu_stats %>% filter(avg_assets>=10000000 & avg_assets<50000000)
large_cu_stats <- cu_stats %>% filter(avg_assets>=50000000 & avg_assets<100000000)
xlarge_cu_stats <- cu_stats %>% filter(avg_assets>=100000000 & avg_assets<500000000)
huge_cu_stats <- cu_stats %>% filter(avg_assets>=500000000)
#write.csv(small_cu_stats, "d3/data/small_stats.csv", row.names=FALSE)
#write.csv(med_cu_stats, "d3/data/med_stats.csv", row.names=FALSE)
#write.csv(large_cu_stats, "d3/data/large_stats.csv", row.names=FALSE)
#write.csv(xlarge_cu_stats, "d3/data/xlarge_stats.csv", row.names=FALSE)
#write.csv(huge_cu_stats, "d3/data/huge_stats.csv", row.names=FALSE)
#scatterplot theme
scatter_theme <- my_theme <- theme(
#titles
plot.title=element_text(family="bold", size=30, color="black", hjust=0),
#background
panel.border=element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
#axes
axis.ticks.length=unit(0.15, "cm"),
axis.ticks = element_line(),
axis.line = element_blank(),
axis.title = element_text(size=25, family="bold", colour="black"),
axis.text = element_text(size=18, family="regular", colour="black"),
#no legend
legend.position = "none")
#5-number summary
summary(small_cu_stats$num_groups_added)
summary(small_cu_stats$total_members_added)
#scatter num groups
labels_df1 <- data.frame(x=c(5248900, 7000342), y=c(6, 6), labels=c('Valley Agricultural: 6', 'Noteworthy: 6'))
small_scatter_groups <- small_cu_stats %>% ggplot(aes(x=avg_assets, y=num_groups_added)) +
geom_point(color="#15ADC1", fill="#15ADC1", alpha=0.5, size=2) +
geom_label_repel(inherit.aes=FALSE, data=labels_df1, aes(x=x, y=y, label=labels), min.segment.length=0) +
labs(title="Small Credit Unions Adding Groups (2020)") +
xlab("Assets") + ylab("Number of Groups") +
scale_x_continuous(labels=scales::comma, limits = c(0, 10500000)) +
coord_cartesian(clip='off') +
scatter_theme
ggsave("visuals/cu_small_scatter_groups2020.png",
plot=small_scatter_groups,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
#scatter num members
labels_df2 <- data.frame(x=c(2947798,7000342, 5248900), y=c(645,1350, 500),
labels=c('Local 265 IBEW: 645', 'Noteworthy: 1350', 'Valley Agricultural: 500'))
small_scatter_members <- small_cu_stats %>% ggplot(aes(x=avg_assets, y=total_members_added)) +
geom_point(color="#15ADC1", fill="#15ADC1", alpha=0.5, size=2) +
geom_label_repel(inherit.aes=FALSE, data=labels_df2, aes(x=x, y=y, label=labels), min.segment.length=0) +
labs(title="Small Credit Unions Adding Potential Members (2020)") +
xlab("Assets") + ylab("Number of Potential Members") +
scale_x_continuous(labels=scales::comma, limits = c(0, 10500000)) +
scale_y_continuous(labels=scales::comma) +
scatter_theme
ggsave("visuals/cu_small_scatter_members2020.png",
plot=small_scatter_members,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
#5-number summary
summary(med_cu_stats$num_groups_added)
summary(med_cu_stats$total_members_added)
#scatter num groups
labels_df3 <- data.frame(x=c(10177621, 31128461), y=c(11, 9),
labels=c('Espeeco: 11', 'Valex: 9'))
med_scatter_groups <- med_cu_stats %>% ggplot(aes(x=avg_assets, y=num_groups_added)) +
geom_point(color="#FFCE06", fill="#FFCE06", alpha=0.5, size=2) +
geom_label_repel(inherit.aes=FALSE, data=labels_df3, aes(x=x, y=y, label=labels), min.segment.length=0) +
labs(title="Medium Credit Unions Adding Groups (2020)") +
xlab("Assets") + ylab("Number of Groups") +
scale_x_continuous(labels=scales::comma, limits = c(10000000, 50500000)) +
coord_cartesian(clip='off') +
scatter_theme
ggsave("visuals/cu_med_scatter_groups2020.png",
plot=med_scatter_groups,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
#scatter num members
labels_df4 <- data.frame(x=c(16835738), y=c(27094), labels=c('Clean Energy: 27,094'))
med_scatter_members <- med_cu_stats %>% ggplot(aes(x=avg_assets, y=total_members_added)) +
geom_point(color="#FFCE06", fill="#FFCE06", alpha=0.5, size=2) +
geom_label_repel(inherit.aes=FALSE, data=labels_df4, aes(x=x, y=y, label=labels), min.segment.length=0) +
labs(title="Medium Credit Unions Adding Potential Members (2020)") +
xlab("Assets") + ylab("Number of Potential Members") +
scale_x_continuous(labels=scales::comma, limits = c(10000000, 50500000)) +
scale_y_continuous(labels=scales::comma) +
scatter_theme
ggsave("visuals/cu_med_scatter_members2020.png",
plot=med_scatter_members,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
summary(large_cu_stats$num_groups_added)
summary(large_cu_stats$total_members_added)
#scatter num groups
labels_df5 <- data.frame(x=c(77243697, 73357331), y=c(14, 9),
labels=c('ACMG: 14', 'St. Thomas: 9'))
large_scatter_groups <- large_cu_stats %>% ggplot(aes(x=avg_assets, y=num_groups_added)) +
geom_point(color="#EE8109", fill="#EE8109", alpha=0.5, size=2) +
geom_label_repel(inherit.aes=FALSE, data=labels_df5, aes(x=x, y=y, label=labels), min.segment.length=0) +
labs(title="Large Credit Unions Adding Groups (2020)") +
xlab("Assets") + ylab("Number of Groups") +
scale_x_continuous(labels=scales::comma, limits = c(50000000, 100500000)) +
coord_cartesian(clip='off') +
scatter_theme
ggsave("visuals/cu_large_scatter_groups2020.png",
plot=large_scatter_groups,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
#scatter num members
labels_df6 <- data.frame(x=c(55650001, 90584447, 52380483), y=c(11000, 3913, 3800),
labels=c('Electel Cooperative: 11,000', 'Welcome: 3913', 'Southcoast: 3800'))
large_scatter_members <- large_cu_stats %>% ggplot(aes(x=avg_assets, y=total_members_added)) +
geom_point(color="#EE8109", fill="#EE8109", alpha=0.5, size=2) +
geom_label_repel(inherit.aes=FALSE, data=labels_df6, aes(x=x, y=y, label=labels), min.segment.length=0) +
labs(title="Large Credit Unions Adding Potential Members (2020)") +
xlab("Assets") + ylab("Number of Potential Members") +
scale_x_continuous(labels=scales::comma, limits = c(50000000, 100500000)) +
scale_y_continuous(labels=scales::comma) +
scatter_theme
ggsave("visuals/cu_large_scatter_members2020.png",
plot=large_scatter_members,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
summary(xlarge_cu_stats$num_groups_added)
summary(xlarge_cu_stats$total_members_added)
#scatter num groups
labels_df7 <- data.frame(x=c(367983039, 482534005, 396799273), y=c(210, 95, 74),
labels=c('AOD: 210', 'Service 1st: 95', 'Railroad & Industrial: 74'))
xlarge_scatter_groups <- xlarge_cu_stats %>% ggplot(aes(x=avg_assets, y=num_groups_added)) +
geom_point(color="#B9272A", fill="#B9272A", alpha=0.5, size=2) +
geom_label_repel(inherit.aes=FALSE, data=labels_df7, aes(x=x, y=y, label=labels), min.segment.length=0) +
labs(title="X-Large Credit Unions Adding Groups (2020)") +
xlab("Assets") + ylab("Number of Groups") +
scale_x_continuous(labels=scales::comma, limits = c(100000000, 500500000)) +
coord_cartesian(clip='off') +
scatter_theme
ggsave("visuals/cu_xlarge_scatter_groups2020.png",
plot=xlarge_scatter_groups,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
#scatter num members
labels_df8 <- data.frame(x=c(375681469), y=c(6639325),
labels=c('Beehive: 6,639,325'))
xlarge_scatter_members <- xlarge_cu_stats %>% ggplot(aes(x=avg_assets, y=total_members_added)) +
geom_point(color="#B9272A", fill="#B9272A", alpha=0.5, size=2) +
geom_label_repel(inherit.aes=FALSE, data=labels_df8, aes(x=x, y=y, label=labels), min.segment.length=0) +
labs(title="X-Large Credit Unions Adding Potential Members (2020)") +
xlab("Assets") + ylab("Number of Potential Members") +
scale_x_continuous(labels=scales::comma, limits = c(100000000, 500500000)) +
scale_y_continuous(labels=scales::comma) +
scatter_theme
ggsave("visuals/cu_xlarge_scatter_members2020.png",
plot=xlarge_scatter_members,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
#another scatterplot to better see points other than outlier
labels_df9 <- data.frame(x=c(266490750, 253721694, 341447021), y=c(288747, 279897, 189337),
labels=c('WYHY: 288,747', 'Parsons: 279,897', 'Signature: 189,337'))
xlarge_scatter_members2 <- xlarge_cu_stats %>% ggplot(aes(x=avg_assets, y=total_members_added)) +
geom_point(color="#B9272A", fill="#B9272A", alpha=0.5, size=2) +
geom_label_repel(inherit.aes=FALSE, data=labels_df9, aes(x=x, y=y, label=labels), min.segment.length=0) +
labs(title="X-Large Credit Unions Adding Potential Members (2020)") +
xlab("Assets") + ylab("Number of Potential Members") +
scale_x_continuous(labels=scales::comma, limits = c(100000000, 500500000)) +
scale_y_continuous(labels=scales::comma, limits = c(0, 300000)) +
scatter_theme
ggsave("visuals/cu_xlarge_scatter_members2020_2.png",
plot=xlarge_scatter_members2,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
summary(huge_cu_stats$num_groups_added)
summary(huge_cu_stats$total_members_added)
#scatter num groups
labels_df10 <- data.frame(x=c(2259325028), y=c(909),
labels=c('Empower: 909'))
huge_scatter_groups <- huge_cu_stats %>% ggplot(aes(x=avg_assets, y=num_groups_added)) +
geom_point(color="#4AA02E", fill="#4AA02E", alpha=0.5, size=2) +
geom_label_repel(inherit.aes=FALSE, data=labels_df10, aes(x=x, y=y, label=labels), min.segment.length=0) +
labs(title="Huge Credit Unions Adding Groups (2020)") +
xlab("Assets") + ylab("Number of Groups") +
scale_x_continuous(labels=scales::comma, limits = c(500000000, 14000500000)) +
coord_cartesian(clip='off') +
scatter_theme
ggsave("visuals/cu_huge_scatter_groups2020.png",
plot=huge_scatter_groups,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
#scatter num members
labels_df11 <- data.frame(x=c(837041248), y=c(5048305),
labels=c('Notre Dame: 5,048,305'))
huge_scatter_members <- huge_cu_stats %>% ggplot(aes(x=avg_assets, y=total_members_added)) +
geom_point(color="#4AA02E", fill="#4AA02E", alpha=0.5, size=2) +
geom_label_repel(inherit.aes=FALSE, data=labels_df11, aes(x=x, y=y, label=labels), min.segment.length=0) +
labs(title="Huge Credit Unions Adding Potential Members (2020)") +
xlab("Assets") + ylab("Number of Potential Members") +
scale_x_continuous(labels=scales::comma, limits = c(500000000, 14000500000)) +
scale_y_continuous(labels=scales::comma) +
scatter_theme
ggsave("visuals/cu_huge_scatter_members2020.png",
plot=huge_scatter_members,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
#another scatterplot to better see points other than outlier
labels_df12 <- data.frame(x=c(572620446), y=c(988305),
labels=c('SkyOne: 988,305'))
huge_scatter_members2 <- huge_cu_stats %>% ggplot(aes(x=avg_assets, y=total_members_added)) +
geom_point(color="#4AA02E", fill="#4AA02E", alpha=0.5, size=2) +
geom_label_repel(inherit.aes=FALSE, data=labels_df12, aes(x=x, y=y, label=labels), min.segment.length=0) +
labs(title="Huge Credit Unions Adding Potential Members (2020)") +
xlab("Assets") + ylab("Number of Potential Members") +
scale_x_continuous(labels=scales::comma, limits = c(500000000, 14000500000)) +
scale_y_continuous(labels=scales::comma, limits = c(0, 1000000)) +
scatter_theme
ggsave("visuals/cu_huge_scatter_members2020_2.png",
plot=huge_scatter_members2,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
library(ggridges)
ridgeline <- ggplot(cu_stats, aes(x=num_groups_added, y=cu_size, fill=cu_size)) + geom_density_ridges() + theme_ridges() + xlim(c(-50,100)) + theme(legend.position="none")
ggsave("visuals/ridgeline.png",
plot=ridgeline,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
source("https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/raw/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R")
raincloud <- ggplot(data=cu_stats, aes(x=cu_size, y=num_groups_added, fill=cu_size)) +
geom_flat_violin(position=position_nudge(x=0.2, y=0), alpha=0.8) +
geom_point(aes(y=num_groups_added, color=cu_size),
position=position_jitter(width=0.15), size=1, alpha=0.1) +
geom_boxplot(width=0.2, outlier.shape=NA, alpha=0.8) +
coord_flip() + ylim(0,50) +
labs(y="Number of Groups Added", x=NULL) +
guides(fill=FALSE, color=FALSE)
ggsave("visuals/raindcloud.png",
plot=raincloud,
device = agg_png(width=4, height=3, units="in", res=300))
cu_stats <- cu_stats %>% mutate(cu_size2 = case_when(
avg_assets<100000000 ~ "small",
avg_assets>=100000000 & avg_assets<500000000 ~ "medium",
avg_assets>=500000000 ~ "large"
))
small_cu_stats <- cu_stats %>% filter(avg_assets>=1 & avg_assets<100000000)
med_cu_stats <- cu_stats %>% filter(avg_assets>=100000000 & avg_assets<500000000)
large_cu_stats <- cu_stats %>% filter(avg_assets>=500000000)
write.csv(small_cu_stats, "d3/data/small_stats.csv", row.names=FALSE)
write.csv(med_cu_stats, "d3/data/med_stats.csv", row.names=FALSE)
write.csv(large_cu_stats, "d3/data/large_stats.csv", row.names=FALSE)
#scatterplot theme
scatter_theme <- my_theme <- theme(
#titles
plot.title=element_text(family="bold", size=30, color="black", hjust=0),
#background
panel.border=element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.background = element_rect(fill = "white"),
plot.background = element_rect(fill = "white"),
#axes
axis.ticks.length=unit(0.15, "cm"),
axis.ticks = element_line(),
axis.line = element_blank(),
axis.title = element_text(size=25, family="bold", colour="black"),
axis.text = element_text(size=18, family="regular", colour="black"),
#no legend
legend.position = "none")
#5-number summary
summary(small_cu_stats$num_groups_added)
summary(small_cu_stats$total_members_added)
#scatter num groups
#labels_df1 <- data.frame(x=c(5248900, 7000342), y=c(6, 6), labels=c('Valley Agricultural: 6', 'Noteworthy: 6'))
small_scatter_groups <- small_cu_stats %>% ggplot(aes(x=avg_assets, y=num_groups_added)) +
geom_point(color="#15ADC1", fill="#15ADC1", alpha=0.5, size=2) +
#geom_label_repel(inherit.aes=FALSE, data=labels_df1, aes(x=x, y=y, label=labels), min.segment.length=0) +
labs(title="Small Credit Unions Adding Groups (2020)") +
xlab("Assets") + ylab("Number of Groups") +
scale_x_continuous(labels=scales::comma, limits = c(0, 100500000)) +
coord_cartesian(clip='off') +
scatter_theme
ggsave("visuals/cu_small_scatter_groups20202.png",
plot=small_scatter_groups,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
#scatter num members
#labels_df2 <- data.frame(x=c(2947798,7000342, 5248900), y=c(645,1350, 500),
#labels=c('Local 265 IBEW: 645', 'Noteworthy: 1350', 'Valley Agricultural: 500'))
small_scatter_members <- small_cu_stats %>% ggplot(aes(x=avg_assets, y=total_members_added)) +
geom_point(color="#15ADC1", fill="#15ADC1", alpha=0.5, size=2) +
#geom_label_repel(inherit.aes=FALSE, data=labels_df2, aes(x=x, y=y, label=labels), min.segment.length=0) +
labs(title="Small Credit Unions Adding Potential Members (2020)") +
xlab("Assets") + ylab("Number of Potential Members") +
scale_x_continuous(labels=scales::comma, limits = c(0, 100500000)) +
scale_y_continuous(labels=scales::comma) +
scatter_theme
ggsave("visuals/cu_small_scatter_members20202.png",
plot=small_scatter_members,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
#5-number summary
summary(med_cu_stats$num_groups_added)
summary(med_cu_stats$total_members_added)
#scatter num groups
#labels_df3 <- data.frame(x=c(10177621, 31128461), y=c(11, 9),
#                         labels=c('Espeeco: 11', 'Valex: 9'))
med_scatter_groups <- med_cu_stats %>% ggplot(aes(x=avg_assets, y=num_groups_added)) +
geom_point(color="#FFCE06", fill="#FFCE06", alpha=0.5, size=2) +
#geom_label_repel(inherit.aes=FALSE, data=labels_df3, aes(x=x, y=y, label=labels), min.segment.length=0) +
labs(title="Medium Credit Unions Adding Groups (2020)") +
xlab("Assets") + ylab("Number of Groups") +
scale_x_continuous(labels=scales::comma, limits = c(100000000, 500500000)) +
coord_cartesian(clip='off') +
scatter_theme
ggsave("visuals/cu_med_scatter_groups20202.png",
plot=med_scatter_groups,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
#scatter num members
#labels_df4 <- data.frame(x=c(16835738), y=c(27094), labels=c('Clean Energy: 27,094'))
med_scatter_members <- med_cu_stats %>% ggplot(aes(x=avg_assets, y=total_members_added)) +
geom_point(color="#FFCE06", fill="#FFCE06", alpha=0.5, size=2) +
#geom_label_repel(inherit.aes=FALSE, data=labels_df4, aes(x=x, y=y, label=labels), min.segment.length=0) +
labs(title="Medium Credit Unions Adding Potential Members (2020)") +
xlab("Assets") + ylab("Number of Potential Members") +
scale_x_continuous(labels=scales::comma, limits = c(100000000, 500500000)) +
scale_y_continuous(labels=scales::comma) +
scatter_theme
ggsave("visuals/cu_med_scatter_members20202.png",
plot=med_scatter_members,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
summary(large_cu_stats$num_groups_added)
summary(large_cu_stats$total_members_added)
#scatter num groups
#labels_df5 <- data.frame(x=c(77243697, 73357331), y=c(14, 9),
#                         labels=c('ACMG: 14', 'St. Thomas: 9'))
large_scatter_groups <- large_cu_stats %>% ggplot(aes(x=avg_assets, y=num_groups_added)) +
geom_point(color="#EE8109", fill="#EE8109", alpha=0.5, size=2) +
#geom_label_repel(inherit.aes=FALSE, data=labels_df5, aes(x=x, y=y, label=labels), min.segment.length=0) +
labs(title="Large Credit Unions Adding Groups (2020)") +
xlab("Assets") + ylab("Number of Groups") +
scale_x_continuous(labels=scales::comma, limits = c(500000000, 14000500000)) +
scale_y_continuous(labels=scales::comma) +
coord_cartesian(clip='off') +
scatter_theme
ggsave("visuals/cu_large_scatter_groups20202.png",
plot=large_scatter_groups,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
#scatter num members
#labels_df6 <- data.frame(x=c(55650001, 90584447, 52380483), y=c(11000, 3913, 3800),
#                         labels=c('Electel Cooperative: 11,000', 'Welcome: 3913', 'Southcoast: 3800'))
large_scatter_members <- large_cu_stats %>% ggplot(aes(x=avg_assets, y=total_members_added)) +
geom_point(color="#EE8109", fill="#EE8109", alpha=0.5, size=2) +
#geom_label_repel(inherit.aes=FALSE, data=labels_df6, aes(x=x, y=y, label=labels), min.segment.length=0) +
labs(title="Large Credit Unions Adding Potential Members (2020)") +
xlab("Assets") + ylab("Number of Potential Members") +
scale_x_continuous(labels=scales::comma, limits = c(500000000, 14000500000)) +
scale_y_continuous(labels=scales::comma, limits = c(0, 1000000)) +
scatter_theme
ggsave("visuals/cu_large_scatter_members20202.png",
plot=large_scatter_members,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
library(ggridges)
ridgeline <- ggplot(cu_stats, aes(x=num_groups_added, y=cu_size2, fill=cu_size2)) +
geom_density_ridges(quantile_lines=TRUE,
quantile_fun=function(x,...)mean(x)) +
theme_ridges() + xlim(c(-10,100)) + theme(legend.position="none")
ggsave("visuals/ridgeline2.png",
plot=ridgeline,
device = agg_png(width = 4, height = 3, units = "in", res = 300))
source("https://gist.githubusercontent.com/benmarwick/2a1bb0133ff568cbe28d/raw/fb53bd97121f7f9ce947837ef1a4c65a73bffb3f/geom_flat_violin.R")
raincloud <- ggplot(data=cu_stats, aes(x=cu_size2, y=num_groups_added, fill=cu_size2)) +
geom_flat_violin(position=position_nudge(x=0.2, y=0), alpha=0.8) +
geom_point(aes(y=num_groups_added, color=cu_size2),
position=position_jitter(width=0.15), size=1, alpha=0.1) +
geom_boxplot(width=0.2, outlier.shape=NA, alpha=0.8) +
coord_flip() + ylim(0,50) +
labs(y="Number of Groups Added", x=NULL) +
guides(fill=FALSE, color=FALSE)
ggsave("visuals/raindcloud2.png",
plot=raincloud,
device = agg_png(width=4, height=3, units="in", res=300))
View(small_cu_stats)
small_standouts <- small_cu_stats %>% filter(num_groups_added>7 & total_members_added>1000)
small_standouts <- small_cu_stats %>% filter(num_groups_added>7 | total_members_added>1000)
View(small_standouts)
small_standouts <- small_cu_stats %>% filter(num_groups_added>7 | total_members_added>2000)
View(small_standouts)
small_standouts <- small_cu_stats %>% filter(num_groups_added>7 | total_members_added>2600)
View(med_cu_stats)
med_standouts <- med_cu_stats %>% filter(num_groups_added>50 | total_members_added>50000)
View(med_standouts)
med_standouts <- med_cu_stats %>% filter(num_groups_added>50 | total_members_added>63500)
View(med_standouts)
